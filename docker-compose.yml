version: '3.1'

networks:
  error-network:
      driver: bridge

volumes:
  esdata:
    driver: local

services:
  ruby:
    build:
      context: .
      dockerfile: docker/ruby/Dockerfile
    environment:
      - RAILS_ENV=development
    volumes:
      - ./docker/ruby/entrypoint.sh:/entrypoint.sh
      - ./src:/home/app/lol
    networks:
      - error-network
    ports:
      - '3000:3000'
      - '2222:22'
    stdin_open: true
    tty: true
    entrypoint:
      - /entrypoint.sh
    depends_on:
      - mysql
#    healthcheck:
#      test: ['CMD', 'curl', 'http://localhost:3000']
#      interval: 20s
#      timeout: 40s
#      retries: 2
    labels:
      - maintainer='jordi@error.agency'
  mysql:
    image: mysql:5.7
    ports:
      - '3306:3306'
    volumes:
      - ./src/database/import:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=layers-app_development
      - MYSQL_USER=user
      - MYSQL_PASSWORD=root
    networks:
      - error-network
    labels:
      - maintainer='jordi@error.agency'
  redis:
    image: redis:3.2
    networks:
      - error-network
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 1s
      timeout: 1s
      retries: 300
    labels:
      - maintainer='jordi@error.agency'
  webpack:
    build:
      context: .
      dockerfile: docker/webpack/Dockerfile
    env_file:
      - '.env.docker'
    networks:
      - error-network
    command: bin/webpack-dev-server
    volumes:
      - ./src:/home/app/lol # TODO: check whether is need to mount the entire app folder
    ports:
      - '3035:3035'
    labels:
      - maintainer='jordi@error.agency'
